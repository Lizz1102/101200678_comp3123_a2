{"ast":null,"code":"var _jsxFileName = \"C:\\\\LIZZIS\\\\5TH_SEMESTER\\\\FULL STACK DEV\\\\Assignment 02\\\\101200678_comp3123_a2\\\\101200678_comp3123_a2\\\\src\\\\components\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { createMuiTheme, Container, ThemeProvider } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Weather from \"./Weather\";\nexport default function App() {\n  const city = \"Toronto\";\n  const [error, setError] = useState(null);\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [forecast, setForecast] = useState([]);\n  useEffect(() => {\n    getWeather(city).then(weather => {\n      setCurrentWeather(weather);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, [city, error]);\n  useEffect(() => {\n    getForecast(city).then(data => {\n      setForecast(data);\n      setError(null);\n    }).catch(err => {\n      setError(err.message);\n    });\n  }, [city, error]);\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\"Inter\", \"-apple-system\", \"BlinkMacSystemFont\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n      fontSize: 14,\n      h5: {\n        fontWeight: 600\n      }\n    }\n  });\n\n  if (currentWeather && Object.keys(currentWeather).length || forecast && Object.keys(forecast).length) {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Weather, {\n      city: city,\n      currentWeather: currentWeather,\n      forecast: forecast,\n      error: error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 18\n      }\n    }, error) : \"\");\n  }\n}\n\nfunction handleResponse(response) {\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(\"Error: Location \" + response.statusText.toLowerCase());\n  }\n}\n\nfunction getWeather(city) {\n  return fetch(`${process.env.API_URL}/weather/?q=${city}&units=metric&APPID=${process.env.RAPI_KEY}`).then(res => handleResponse(res)).then(weather => {\n    if (Object.entries(weather).length) {\n      const mappedData = mapDataToWeatherInterface(weather);\n      return mappedData;\n    }\n  });\n}\n\nfunction getForecast(city) {\n  return fetch(`${process.env.REACT_APP_API_URL}/forecast/?q=${city}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`).then(res => handleResponse(res)).then(result => {\n    if (Object.entries(result).length) {\n      const forecast = [];\n\n      for (let i = 0; i < result.list.length; i += 8) {\n        forecast.push(mapDataToWeatherInterface(result.list[i + 4]));\n      }\n\n      return forecast;\n    }\n  });\n}\n\nfunction mapDataToWeatherInterface(data) {\n  const mapped = {\n    city: data.name,\n    country: data.sys.country,\n    date: data.dt * 1000,\n    humidity: data.main.humidity,\n    icon_id: data.weather[0].id,\n    temperature: data.main.temp,\n    description: data.weather[0].description,\n    wind_speed: Math.round(data.wind.speed * 3.6),\n    condition: data.cod\n  };\n\n  if (data.dt_txt) {\n    mapped.dt_txt = data.dt_txt;\n  }\n\n  if (data.weather[0].icon) {\n    mapped.icon = data.weather[0].icon;\n  }\n\n  if (data.main.temp_min && data.main.temp_max) {\n    mapped.max = data.main.temp_max;\n    mapped.min = data.main.temp_min;\n  }\n\n  Object.keys(mapped).forEach(key => mapped[key] === undefined && delete data[key]);\n  return mapped;\n}","map":{"version":3,"sources":["C:/LIZZIS/5TH_SEMESTER/FULL STACK DEV/Assignment 02/101200678_comp3123_a2/101200678_comp3123_a2/src/components/App.js"],"names":["React","useEffect","useState","createMuiTheme","Container","ThemeProvider","CssBaseline","Weather","App","city","error","setError","currentWeather","setCurrentWeather","forecast","setForecast","getWeather","then","weather","catch","err","message","getForecast","data","theme","typography","fontFamily","join","fontSize","h5","fontWeight","Object","keys","length","handleResponse","response","ok","json","Error","statusText","toLowerCase","fetch","process","env","API_URL","RAPI_KEY","res","entries","mappedData","mapDataToWeatherInterface","REACT_APP_API_URL","REACT_APP_API_KEY","result","i","list","push","mapped","name","country","sys","date","dt","humidity","main","icon_id","id","temperature","temp","description","wind_speed","Math","round","wind","speed","condition","cod","dt_txt","icon","temp_min","temp_max","max","min","forEach","key","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { createMuiTheme, Container, ThemeProvider } from \"@material-ui/core\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\n\nimport Weather from \"./Weather\"\n\nexport default function App() {\n  const city = \"Toronto\"\n  const [error, setError] = useState(null);\n  const [currentWeather, setCurrentWeather] = useState({})\n  const [forecast, setForecast] = useState([])\n\n  useEffect(() => {\n    getWeather(city)\n      .then(weather => {\n        setCurrentWeather(weather);\n        setError(null)\n      })\n      .catch(err => {\n        setError(err.message);\n      });\n  }, [city, error]);\n\n  useEffect(() => {\n    getForecast(city)\n      .then(data => {\n        setForecast(data)\n        setError(null)\n      })\n      .catch(err => {\n        setError(err.message)\n      });\n  }, [city, error])\n\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        \"Inter\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"'\n      ].join(\",\"),\n      fontSize: 14,\n      h5: {\n        fontWeight: 600\n      }\n    }\n  })\n\n  if (\n    (currentWeather && Object.keys(currentWeather).length) ||\n    (forecast && Object.keys(forecast).length)\n  ) {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <Weather\n            city={city}\n            currentWeather={currentWeather}\n            forecast={forecast}\n            error={error}\n          />\n        </Container>\n      </ThemeProvider>\n    )\n  } else {\n    return (\n      <div>\n        {error ? <p>{error}</p> : \"\"}\n      </div>\n    )\n  }\n}\n\nfunction handleResponse(response) {\n  if (response.ok) {\n    return response.json()\n  } else {\n    throw new Error(\"Error: Location \" + (response.statusText).toLowerCase())\n  }\n}\n\nfunction getWeather(city) {\n  return fetch(\n    `${process.env.API_URL}/weather/?q=${city}&units=metric&APPID=${process.env.RAPI_KEY}`\n  )\n    .then(res => handleResponse(res))\n    .then(weather => {\n      if (Object.entries(weather).length) {\n        const mappedData = mapDataToWeatherInterface(weather)\n        return mappedData\n      }\n    })\n}\n\nfunction getForecast(city) {\n  return fetch(\n    `${process.env.REACT_APP_API_URL}/forecast/?q=${city}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\n  )\n    .then(res => handleResponse(res))\n    .then(result => {\n      if (Object.entries(result).length) {\n        const forecast = []\n        for (let i = 0; i < result.list.length; i += 8) {\n          forecast.push(mapDataToWeatherInterface(result.list[i + 4]))\n        }\n        return forecast\n      }\n    })\n}\n\nfunction mapDataToWeatherInterface(data) {\n  const mapped = {\n    city: data.name,\n    country: data.sys.country,\n    date: data.dt * 1000,\n    humidity: data.main.humidity,\n    icon_id: data.weather[0].id,\n    temperature: data.main.temp,\n    description: data.weather[0].description,\n    wind_speed: Math.round(data.wind.speed * 3.6), \n    condition: data.cod\n  }\n\n  \n  if (data.dt_txt) {\n    mapped.dt_txt = data.dt_txt\n  }\n\n  if (data.weather[0].icon) {\n    mapped.icon = data.weather[0].icon\n  }\n\n  if (data.main.temp_min && data.main.temp_max) {\n    mapped.max = data.main.temp_max\n    mapped.min = data.main.temp_min\n  }\n\n  \n  Object.keys(mapped).forEach(\n    key => mapped[key] === undefined && delete data[key]\n  )\n\n  return mapped\n}\n"]},"metadata":{},"sourceType":"module"}