{"ast":null,"code":"var _jsxFileName = \"C:\\\\LIZZIS\\\\5TH_SEMESTER\\\\FULL STACK DEV\\\\Assignment 02\\\\101200678_comp3123_a2\\\\101200678_comp3123_a2\\\\src\\\\components\\\\App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { createMuiTheme, Container, ThemeProvider } from \"@material-ui/core\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport WeatherCard from \"./WeatherCard\";\nexport default function App() {\n  const city = \"Toronto\";\n  const [currentWeather, setCurrentWeather] = useState({});\n  const [forecast, setForecast] = useState([]);\n  useEffect(() => {\n    getWeather(city).then(weather => {\n      setCurrentWeather(weather);\n    });\n  }, [city]);\n  useEffect(() => {\n    getForecast(city).then(data => {\n      setForecast(data);\n    });\n  }, [city]);\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\"Inter\", \"-apple-system\", \"BlinkMacSystemFont\", '\"Helvetica Neue\"', \"Arial\", \"sans-serif\", '\"Apple Color Emoji\"', '\"Segoe UI Emoji\"', '\"Segoe UI Symbol\"'].join(\",\"),\n      fontSize: 14,\n      h5: {\n        fontWeight: 600\n      }\n    }\n  });\n\n  if (currentWeather && Object.keys(currentWeather).length || forecast && Object.keys(forecast).length) {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      maxWidth: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WeatherCard, {\n      city: city,\n      currentWeather: currentWeather,\n      forecast: forecast,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }\n    }, error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 18\n      }\n    }, error) : \"\");\n  }\n}\n\nfunction handleResponse(response) {\n  if (response.ok) {\n    return response.json();\n  } else {\n    throw new Error(\"Error: Location \" + response.statusText.toLowerCase());\n  }\n}\n\nfunction getWeather(city) {\n  return fetch(`${process.env.REACT_APP_API_URL}/weather/?q=${city}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`).then(res => handleResponse(res)).then(weather => {\n    if (Object.entries(weather).length) {\n      const mappedData = mapDataToWeatherInterface(weather);\n      return mappedData;\n    }\n  });\n}\n\nfunction getForecast(city) {\n  return fetch(`${process.env.REACT_APP_API_URL}/forecast/?q=${city}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`).then(res => handleResponse(res)).then(result => {\n    if (Object.entries(result).length) {\n      const forecast = [];\n\n      for (let i = 0; i < result.list.length; i += 8) {\n        forecast.push(mapDataToWeatherInterface(result.list[i + 4]));\n      }\n\n      return forecast;\n    }\n  });\n}\n\nfunction mapDataToWeatherInterface(data) {\n  const mappedWeatherData = {\n    city: data.name,\n    country: data.sys.country,\n    date: data.dt * 1000,\n    humidity: data.main.humidity,\n    icon_id: data.weather[0].id,\n    temperature: data.main.temp,\n    description: data.weather[0].description,\n    wind_speed: Math.round(data.wind.speed * 3.6),\n    condition: data.cod\n  };\n\n  if (data.dt_txt) {\n    mappedWeatherData.dt_txt = data.dt_txt;\n  }\n\n  if (data.weather[0].icon) {\n    mappedWeatherData.icon = data.weather[0].icon;\n  }\n\n  if (data.main.temp_min && data.main.temp_max) {\n    mappedWeatherData.max = data.main.temp_max;\n    mappedWeatherData.min = data.main.temp_min;\n  }\n\n  return mappedWeatherData;\n}","map":{"version":3,"sources":["C:/LIZZIS/5TH_SEMESTER/FULL STACK DEV/Assignment 02/101200678_comp3123_a2/101200678_comp3123_a2/src/components/App.js"],"names":["React","useEffect","useState","createMuiTheme","Container","ThemeProvider","CssBaseline","WeatherCard","App","city","currentWeather","setCurrentWeather","forecast","setForecast","getWeather","then","weather","getForecast","data","theme","typography","fontFamily","join","fontSize","h5","fontWeight","Object","keys","length","error","handleResponse","response","ok","json","Error","statusText","toLowerCase","fetch","process","env","REACT_APP_API_URL","REACT_APP_API_KEY","res","entries","mappedData","mapDataToWeatherInterface","result","i","list","push","mappedWeatherData","name","country","sys","date","dt","humidity","main","icon_id","id","temperature","temp","description","wind_speed","Math","round","wind","speed","condition","cod","dt_txt","icon","temp_min","temp_max","max","min"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { createMuiTheme, Container, ThemeProvider } from \"@material-ui/core\"\nimport CssBaseline from \"@material-ui/core/CssBaseline\"\n\nimport WeatherCard from \"./WeatherCard\"\n\nexport default function App() {\n  const city = \"Toronto\"\n  \n  const [currentWeather, setCurrentWeather] = useState({})\n  const [forecast, setForecast] = useState([])\n\n  useEffect(() => {\n    getWeather(city)\n      .then(weather => {\n        setCurrentWeather(weather)\n      })\n  }, [city]);\n\n  useEffect(() => {\n    getForecast(city)\n      .then(data => {\n        setForecast(data)\n      })\n  }, [city])\n\n  const theme = createMuiTheme({\n    typography: {\n      fontFamily: [\n        \"Inter\",\n        \"-apple-system\",\n        \"BlinkMacSystemFont\",\n        '\"Helvetica Neue\"',\n        \"Arial\",\n        \"sans-serif\",\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"'\n      ].join(\",\"),\n      fontSize: 14,\n      h5: {\n        fontWeight: 600\n      }\n    }\n  })\n\n  if (\n    (currentWeather && Object.keys(currentWeather).length) ||\n    (forecast && Object.keys(forecast).length)\n  ) {\n    return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <WeatherCard\n            city={city}\n            currentWeather={currentWeather}\n            forecast={forecast}\n          />\n        </Container>\n      </ThemeProvider>\n    )\n  } else {\n    return (\n      <div>\n        {error ? <p>{error}</p> : \"\"}\n      </div>\n    )\n  }\n}\n\nfunction handleResponse(response) {\n  if (response.ok) {\n    return response.json()\n  } else {\n    throw new Error(\"Error: Location \" + (response.statusText).toLowerCase())\n  }\n}\n\nfunction getWeather(city) {\n  return fetch(\n    `${process.env.REACT_APP_API_URL}/weather/?q=${city}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\n  )\n    .then(res => handleResponse(res))\n    .then(weather => {\n      if (Object.entries(weather).length) {\n        const mappedData = mapDataToWeatherInterface(weather)\n        return mappedData\n      }\n    })\n}\n\nfunction getForecast(city) {\n  return fetch(\n    `${process.env.REACT_APP_API_URL}/forecast/?q=${city}&units=metric&APPID=${process.env.REACT_APP_API_KEY}`\n  )\n    .then(res => handleResponse(res))\n    .then(result => {\n      if (Object.entries(result).length) {\n        const forecast = []\n        for (let i = 0; i < result.list.length; i += 8) {\n          forecast.push(mapDataToWeatherInterface(result.list[i + 4]))\n        }\n        return forecast\n      }\n    })\n}\n\nfunction mapDataToWeatherInterface(data) {\n  const mappedWeatherData = {\n    city: data.name,\n    country: data.sys.country,\n    date: data.dt * 1000,\n    humidity: data.main.humidity,\n    icon_id: data.weather[0].id,\n    temperature: data.main.temp,\n    description: data.weather[0].description,\n    wind_speed: Math.round(data.wind.speed * 3.6), \n    condition: data.cod\n  }\n  \n  if (data.dt_txt) {\n    mappedWeatherData.dt_txt = data.dt_txt\n  }\n\n  if (data.weather[0].icon) {\n    mappedWeatherData.icon = data.weather[0].icon\n  }\n\n  if (data.main.temp_min && data.main.temp_max) {\n    mappedWeatherData.max = data.main.temp_max\n    mappedWeatherData.min = data.main.temp_min\n  }\n\n  return mappedWeatherData\n}\n"]},"metadata":{},"sourceType":"module"}