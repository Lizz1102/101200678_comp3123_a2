{"ast":null,"code":"var _jsxFileName = \"C:\\\\LIZZIS\\\\5TH_SEMESTER\\\\FULL STACK DEV\\\\Assignment 02\\\\101200678_comp3123_a2\\\\101200678_comp3123_a2\\\\src\\\\components\\\\AppLayout.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Card, CardContent, CardHeader, CardMedia, Divider, Typography, Grid } from \"@material-ui/core\";\nimport Forecast from \"./Forecast\";\nimport WeatherCardSubheader from \"./WeatherCardSubheader\";\nconst useStyles = makeStyles(theme => ({\n  atmospheric: {\n    fontSize: \"28px\",\n    padding: \"5px\"\n  },\n  buttons: {\n    color: \"black\"\n  },\n  card: {\n    minWidth: 600,\n    minHeight: 600\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  error: {\n    color: \"red\",\n    padding: \"10px\"\n  },\n  fullList: {\n    width: \"auto\"\n  },\n  layout: {\n    marginTop: \"20px\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  root: {\n    flexiGrow: 1,\n    color: \"black\"\n  },\n  search: {\n    marginTop: \"100px\"\n  },\n  wi: {\n    color: \"#673ab7\"\n  }\n}));\nexport default function AppLayout(props) {\n  const classes = useStyles();\n  const {\n    currentWeather,\n    forecast,\n    icon,\n    recommendation\n  } = props;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WeatherCard, {\n    currentWeather: currentWeather,\n    forecast: forecast,\n    icon: icon,\n    recommendation: recommendation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }))));\n}\n\nconst WeatherCard = props => {\n  const classes = useStyles();\n  const humidity = \"wi wi-humidity\";\n  const strongWind = \"wi wi-strong-wind\";\n  const {\n    currentWeather,\n    forecast,\n    icon,\n    recommendation\n  } = props;\n  return /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    title: currentWeather.city + \", \" + currentWeather.country,\n    subheader: /*#__PURE__*/React.createElement(WeatherCardSubheader, {\n      currentWeather: currentWeather,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 20\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardMedia, {\n    className: `${icon} ${classes.wi}`,\n    src: icon,\n    style: {\n      fontSize: \"128px\",\n      float: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    className: \"big-temp\",\n    color: \"textPrimary\",\n    component: \"h2\",\n    style: {\n      fontFamily: \"Montserrat\",\n      paddingTop: \"30px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, Math.round(currentWeather.temperature), \"\\xB0C\"), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"subtitle2\",\n    className: \"atmospheric-conditions\",\n    color: \"textSecondary\",\n    gutterBottom: true,\n    style: {\n      paddingTop: \"40px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${strongWind} ${classes.wi} ${classes.atmospheric}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), currentWeather.wind_speed, \" km/h Winds\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    className: `${humidity} ${classes.wi} ${classes.atmospheric}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }), currentWeather.humidity, \"% Humidity\"), /*#__PURE__*/React.createElement(Typography, {\n    className: `${classes.recommendation} recommendation`,\n    color: \"textPrimary\",\n    gutterBottom: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, recommendation), /*#__PURE__*/React.createElement(Divider, {\n    variant: \"middle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Forecast, {\n    forecast: forecast,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  })));\n};","map":{"version":3,"sources":["C:/LIZZIS/5TH_SEMESTER/FULL STACK DEV/Assignment 02/101200678_comp3123_a2/101200678_comp3123_a2/src/components/AppLayout.js"],"names":["React","makeStyles","Card","CardContent","CardHeader","CardMedia","Divider","Typography","Grid","Forecast","WeatherCardSubheader","useStyles","theme","atmospheric","fontSize","padding","buttons","color","card","minWidth","minHeight","container","display","flexWrap","error","fullList","width","layout","marginTop","paper","spacing","textAlign","palette","text","secondary","root","flexiGrow","search","wi","AppLayout","props","classes","currentWeather","forecast","icon","recommendation","WeatherCard","humidity","strongWind","city","country","float","fontFamily","paddingTop","Math","round","temperature","wind_speed"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardMedia,\n  Divider,\n  Typography,\n  Grid\n} from \"@material-ui/core\";\n\nimport Forecast from \"./Forecast\";\nimport WeatherCardSubheader from \"./WeatherCardSubheader\";\n\nconst useStyles = makeStyles(theme => ({\n  atmospheric: {\n    fontSize: \"28px\",\n    padding: \"5px\"\n  },\n  buttons: {\n    color: \"black\"\n  },\n  card: {\n    minWidth: 600,\n    minHeight: 600\n  },\n  container: {\n    display: \"flex\",\n    flexWrap: \"wrap\"\n  },\n  error: {\n    color: \"red\",\n    padding: \"10px\"\n  },\n  fullList: {\n    width: \"auto\"\n  },\n  layout: {\n    marginTop: \"20px\"\n  },\n\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  },\n  \n  root: {\n    flexiGrow: 1,\n    color: \"black\"\n  },\n  search: {\n    marginTop: \"100px\"\n  },\n  wi: {\n    color: \"#673ab7\"\n  }\n}));\n\nexport default function AppLayout(props) {\n  const classes = useStyles();\n  const { currentWeather, forecast, icon, recommendation } = props;\n\n  return (\n    <div className={classes.layout}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <WeatherCard\n            currentWeather={currentWeather}\n            forecast={forecast}\n            icon={icon}\n            recommendation={recommendation}\n          />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nconst WeatherCard = props => {\n  const classes = useStyles();\n  const humidity = \"wi wi-humidity\";\n  const strongWind = \"wi wi-strong-wind\";\n  const { currentWeather, forecast, icon, recommendation } = props;\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader\n        title={currentWeather.city + \", \" + currentWeather.country}\n        subheader={<WeatherCardSubheader currentWeather={currentWeather} />}\n      />\n      <CardContent>\n        <CardMedia\n          className={`${icon} ${classes.wi}`}\n          src={icon}\n          style={{ fontSize: \"128px\", float: \"right\" }}\n        />\n        <Typography\n          variant=\"h2\"\n          className=\"big-temp\"\n          color=\"textPrimary\"\n          component=\"h2\"\n          style={{ fontFamily: \"Montserrat\", paddingTop: \"30px\" }}\n        >\n          {Math.round(currentWeather.temperature)}&deg;C\n        </Typography>\n        <Typography\n          variant=\"subtitle2\"\n          className=\"atmospheric-conditions\"\n          color=\"textSecondary\"\n          gutterBottom\n          style={{ paddingTop: \"40px\" }}\n        >\n          <span\n            className={`${strongWind} ${classes.wi} ${classes.atmospheric}`}\n          ></span>\n          {currentWeather.wind_speed} km/h Winds{\" \"}\n          <span\n            className={`${humidity} ${classes.wi} ${classes.atmospheric}`}\n          ></span>\n          {currentWeather.humidity}% Humidity\n        </Typography>\n        <Typography\n          className={`${classes.recommendation} recommendation`}\n          color=\"textPrimary\"\n          gutterBottom\n        >\n          {recommendation}\n        </Typography>\n        <Divider variant=\"middle\" />\n        <Forecast forecast={forecast} />\n      </CardContent>\n    </Card>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}